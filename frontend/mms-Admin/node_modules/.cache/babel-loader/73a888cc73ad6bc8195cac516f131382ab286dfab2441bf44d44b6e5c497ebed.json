{"ast":null,"code":"import { createAsyncThunk, createSelector, createSlice } from \"@reduxjs/toolkit\";\nimport \"./../../../assets/images/flag-icons-main/flags/4x3/ac.svg\";\nimport { loginCurrentUserApiAsync, updateCurrentUserApiAsync, updateCurrentUserProfilePictureApiAsync } from \"../../axios/api-services/current-user\";\nconst getEmptyLoggedInUser = () => {\n  return {\n    user: {},\n    userToken: undefined,\n    loginTime: undefined\n  };\n};\nconst initialState = {\n  currentUser: getEmptyLoggedInUser()\n};\nexport const updateCurrentUser = createAsyncThunk(\"current-user/update-user\", async (userDetails, thunkAPI) => {\n  const state = thunkAPI.getState();\n  return await updateCurrentUserApiAsync(userDetails, state.currentUser.currentUser.userToken);\n});\nexport const updateCurrentUserProfilePicture = createAsyncThunk(\"current-user/update-user-profile-image\", async (image, thunkAPI) => {\n  return await updateCurrentUserProfilePictureApiAsync(image);\n});\nexport const loginCurrentUser = createAsyncThunk(\"current-user/login\", async (userDetails, thunkAPI) => {\n  return await loginCurrentUserApiAsync(userDetails);\n});\nexport const CurrentUserSlice = createSlice({\n  name: \"current-user\",\n  initialState,\n  reducers: {\n    updateLoggedInCurrentUser: (state, action) => {\n      let user = state === null || state === void 0 ? void 0 : state.currentUser;\n      user.user = action.payload;\n      user.loginTime = new Date().getTime();\n      return state;\n    },\n    updateLoggedInUserCountryFlag: (state, action) => {\n      let user = state === null || state === void 0 ? void 0 : state.currentUser;\n      user.user.countryFlagIcon = action.payload;\n      return state;\n    },\n    updateLoggedInUserProfilePicture: (state, action) => {\n      let user = state === null || state === void 0 ? void 0 : state.currentUser;\n      user.user.userImage = action.payload;\n      return state;\n    },\n    updateLoggedInUserToken: (state, action) => {\n      let user = state === null || state === void 0 ? void 0 : state.currentUser;\n      user.userToken = action.payload;\n      return state;\n    },\n    logoutCurrentUser: state => {\n      state.currentUser = getEmptyLoggedInUser();\n      return state;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginCurrentUser.fulfilled, (state, action) => {\n      state.currentUser = action.payload;\n      state.currentUser.loginTime = new Date().getTime();\n    });\n    builder.addCase(updateCurrentUser.fulfilled, (state, action) => {\n      state.currentUser.user = action.payload;\n    });\n    builder.addCase(updateCurrentUserProfilePicture.fulfilled, (state, action) => {\n      state.currentUser.user.userImage = action.payload;\n      console.log(\"update image recieved mmmm\", action.payload);\n    });\n  }\n});\nconst selectSelf = state => state.currentUser;\nexport const selectCurrentUser = createSelector([selectSelf], user => user.currentUser.user);\nexport const selectCurrentUserProfilePicture = createSelector([selectSelf], user => user.currentUser.user.userImage);\nexport const selectCurrentUserFlag = createSelector([selectSelf], user => user.currentUser.user.countryFlagIcon);\nexport const selectCurrentUserToken = createSelector([selectSelf], user => user.currentUser.userToken);\nexport const selectCurrentUserNameSelector = createSelector([selectSelf], user => {\n  var person = user.currentUser.user;\n  return {\n    userId: person.userId,\n    email: person.email,\n    fullName: `{${person.firstNames} ${person.lastName}}`\n  };\n});\nexport default CurrentUserSlice.reducer;\nexport const {\n  updateLoggedInCurrentUser\n} = CurrentUserSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSelector","createSlice","loginCurrentUserApiAsync","updateCurrentUserApiAsync","updateCurrentUserProfilePictureApiAsync","getEmptyLoggedInUser","user","userToken","undefined","loginTime","initialState","currentUser","updateCurrentUser","userDetails","thunkAPI","state","getState","updateCurrentUserProfilePicture","image","loginCurrentUser","CurrentUserSlice","name","reducers","updateLoggedInCurrentUser","action","payload","Date","getTime","updateLoggedInUserCountryFlag","countryFlagIcon","updateLoggedInUserProfilePicture","userImage","updateLoggedInUserToken","logoutCurrentUser","extraReducers","builder","addCase","fulfilled","console","log","selectSelf","selectCurrentUser","selectCurrentUserProfilePicture","selectCurrentUserFlag","selectCurrentUserToken","selectCurrentUserNameSelector","person","userId","email","fullName","firstNames","lastName","reducer","actions"],"sources":["/home/johnadeniran/Documents/Projects/Mentor-Management-System-Team-3/frontend/mms-Admin/src/services/redux/slices/current-user-slice.ts"],"sourcesContent":["import {\n  createAsyncThunk,\n  createSelector,\n  createSlice,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\nimport {\n  LoggedInUser,\n  NameDetails,\n  SystemUser,\n  UsernamePassword,\n} from \"../types/system-user\";\nimport { RootState } from \"../Store\";\nimport \"./../../../assets/images/flag-icons-main/flags/4x3/ac.svg\";\nimport {\n  loginCurrentUserApiAsync,\n  updateCurrentUserApiAsync,\n  updateCurrentUserProfilePictureApiAsync,\n} from \"../../axios/api-services/current-user\";\n\ninterface CurrentUserState {\n  currentUser: LoggedInUser;\n}\n\nconst getEmptyLoggedInUser = (): LoggedInUser => {\n  return { user: {}, userToken: undefined, loginTime: undefined };\n};\n\nconst initialState: CurrentUserState = {\n  currentUser: getEmptyLoggedInUser(),\n};\n\nexport const updateCurrentUser = createAsyncThunk(\n  \"current-user/update-user\",\n  async (userDetails: SystemUser, thunkAPI) => {\n    const state : any = thunkAPI.getState();\n    return await updateCurrentUserApiAsync(userDetails, state.currentUser.currentUser.userToken);\n  }\n);\n\nexport const updateCurrentUserProfilePicture = createAsyncThunk(\n  \"current-user/update-user-profile-image\",\n  async (image: any, thunkAPI) => {\n    return await updateCurrentUserProfilePictureApiAsync(image);\n  }\n);\n\nexport const loginCurrentUser = createAsyncThunk(\n  \"current-user/login\",\n  async (userDetails: UsernamePassword, thunkAPI) => {\n    return await loginCurrentUserApiAsync(userDetails);\n  }\n);\n\nexport const CurrentUserSlice = createSlice({\n  name: \"current-user\",\n  initialState,\n  reducers: {\n    updateLoggedInCurrentUser: (state, action: PayloadAction<SystemUser>) => {\n      let user = state?.currentUser;\n      user.user = action.payload;\n      user.loginTime = new Date().getTime();\n      return state;\n    },\n    updateLoggedInUserCountryFlag: (state, action: PayloadAction<any>) => {\n      let user = state?.currentUser;\n      user.user.countryFlagIcon = action.payload;\n      return state;\n    },\n    updateLoggedInUserProfilePicture: (state, action: PayloadAction<any>) => {\n      let user = state?.currentUser;\n      user.user.userImage = action.payload;\n      return state;\n    },\n    updateLoggedInUserToken: (state, action: PayloadAction<any>) => {\n      let user = state?.currentUser;\n      user.userToken = action.payload;\n      return state;\n    },\n    logoutCurrentUser: (state) => {\n      state.currentUser = getEmptyLoggedInUser();\n      return state;\n    },\n  },\n\n  extraReducers: (builder) => {\n    builder.addCase(loginCurrentUser.fulfilled, (state, action) => {\n      state.currentUser = action.payload;\n      state.currentUser.loginTime = new Date().getTime();\n    });\n\n    builder.addCase(updateCurrentUser.fulfilled, (state, action) => {\n      state.currentUser.user = action.payload;\n    });\n\n    builder.addCase(\n      updateCurrentUserProfilePicture.fulfilled,\n      (state, action) => {\n        state.currentUser.user.userImage = action.payload;\n        console.log(\"update image recieved mmmm\", action.payload);\n      }\n    );\n  },\n});\n\nconst selectSelf = (state: RootState) => state.currentUser;\nexport const selectCurrentUser = createSelector(\n  [selectSelf],\n  (user): SystemUser => user.currentUser.user\n);\nexport const selectCurrentUserProfilePicture = createSelector(\n  [selectSelf],\n  (user): any => user.currentUser.user.userImage\n);\nexport const selectCurrentUserFlag = createSelector(\n  [selectSelf],\n  (user): any => user.currentUser.user.countryFlagIcon\n);\nexport const selectCurrentUserToken = createSelector(\n  [selectSelf],\n  (user): any => user.currentUser.userToken\n);\nexport const selectCurrentUserNameSelector = createSelector(\n  [selectSelf],\n  (user): NameDetails => {\n    var person = user.currentUser.user;\n    return {\n      userId: person.userId,\n      email: person.email,\n      fullName: `{${person.firstNames} ${person.lastName}}`,\n    };\n  }\n);\n\nexport default CurrentUserSlice.reducer;\nexport const { updateLoggedInCurrentUser } = CurrentUserSlice.actions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}