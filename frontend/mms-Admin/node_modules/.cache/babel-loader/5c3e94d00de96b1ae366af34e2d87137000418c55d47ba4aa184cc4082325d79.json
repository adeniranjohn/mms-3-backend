{"ast":null,"code":"import getCountryFlag from \"../../countries\";\nimport axiosWithBearer, { axiosWithoutBearer } from \"../axios-services\";\nimport avatar from '../../../assets/images/avatar.svg';\nimport { capitalizeEachWord } from \"../../generalFunctions\";\nexport const changeCurrentUserPasswordApiAsync = async userDetails => {\n  return userDetails;\n};\nexport const resetCurrentUserPasswordApiAsync = async userEmail => {\n  return userEmail;\n};\nexport const updateCurrentUserApiAsync = async (userDetails, token) => {\n  await axiosWithBearer(token !== null && token !== void 0 ? token : \"\").put(\"users/update\", userDetails).then(data => {\n    return data;\n  }).catch(err => {\n    console.log(err);\n    throw err;\n  });\n  return userDetails;\n};\nexport const updateCurrentUserProfilePictureApiAsync = async image => {\n  return image;\n};\nexport const loginCurrentUserApiAsync = async userDetails => {\n  const {\n    username,\n    password\n  } = userDetails;\n  let role = undefined;\n  let token = undefined;\n  const getToken = axiosWithoutBearer.post(\"/auth/login\", {\n    email: `${username}`,\n    password: `${password}`\n  }).then(data => {\n    const obj = data.data.data;\n    role = obj.role;\n    token = obj.access_token;\n    return obj;\n  }).catch(err => {\n    if (userDetails !== null && userDetails !== void 0 && userDetails.afterUnSuccessful) userDetails === null || userDetails === void 0 ? void 0 : userDetails.afterUnSuccessful(err);\n    throw err;\n  });\n  const getUser = getToken.then(() => {\n    var _token;\n    return axiosWithBearer((_token = token) !== null && _token !== void 0 ? _token : \"\").get(\"/users/me\").then(data => {\n      return data;\n    }).catch(err => {\n      if (userDetails !== null && userDetails !== void 0 && userDetails.afterUnSuccessful) userDetails === null || userDetails === void 0 ? void 0 : userDetails.afterUnSuccessful(err);\n      throw err;\n    });\n  }).catch(err => {\n    if (userDetails !== null && userDetails !== void 0 && userDetails.afterUnSuccessful) userDetails === null || userDetails === void 0 ? void 0 : userDetails.afterUnSuccessful(err);\n    throw err;\n  });\n  const getUserAvatar = getToken.then(tt => {\n    var _token2;\n    return axiosWithBearer((_token2 = token) !== null && _token2 !== void 0 ? _token2 : \"\").get(\"/auth/avatar\", {\n      responseType: 'arraybuffer',\n      responseEncoding: \"base64\"\n    });\n  }).then(res => {\n    return Buffer.from(res.data, \"base64\");\n  }).catch(err => {\n    // if (userDetails?.afterUnSuccessful)\n    //   userDetails?.afterUnSuccessful(err);\n  });\n  const finalize = Promise.all([getUser, getUserAvatar]).then(userData => {\n    var _userData$, _role, _loggedInUser$country;\n    const mx = userData[0].data.data;\n    const userProfileImage = (_userData$ = userData[1]) !== null && _userData$ !== void 0 ? _userData$ : avatar;\n    let loggedInUser = {\n      firstNames: capitalizeEachWord(mx.firstName),\n      lastName: capitalizeEachWord(mx.lastName),\n      userRole: role ? capitalizeEachWord((_role = role) !== null && _role !== void 0 ? _role : \"\") : undefined,\n      website: mx.website,\n      about: mx.bio,\n      country: capitalizeEachWord(mx.country),\n      city: capitalizeEachWord(mx.city),\n      email: mx.email,\n      github: mx.socials.github,\n      linkedin: mx.socials.linkedin,\n      instagram: mx.socials.instagram,\n      twitter: mx.socials.twitter\n    };\n    const flag = getCountryFlag((_loggedInUser$country = loggedInUser.country) !== null && _loggedInUser$country !== void 0 ? _loggedInUser$country : \" \");\n    const profilePic = userProfileImage;\n    const userToken = token;\n    loggedInUser = {\n      ...loggedInUser,\n      countryFlagIcon: flag,\n      userImage: profilePic\n    };\n    const user = {\n      user: loggedInUser,\n      userToken: userToken\n    };\n    if (userDetails !== null && userDetails !== void 0 && userDetails.afterSuccessful) userDetails === null || userDetails === void 0 ? void 0 : userDetails.afterSuccessful();\n    return user;\n  }).catch(err => {\n    var _err$response$data$me;\n    const message = (_err$response$data$me = err.response.data.message) !== null && _err$response$data$me !== void 0 ? _err$response$data$me : err;\n    if (userDetails !== null && userDetails !== void 0 && userDetails.afterUnSuccessful) userDetails === null || userDetails === void 0 ? void 0 : userDetails.afterUnSuccessful(message);\n    throw message;\n  });\n  return finalize;\n};\n\n// var options = {\n//   method: 'GET',\n//   url: 'https://api.pexels.com/v1/curated',\n//   params: {page: '2', per_page: '40'},\n//   headers: {Authorization: '_authkey_'}\n// };","map":{"version":3,"names":["getCountryFlag","axiosWithBearer","axiosWithoutBearer","avatar","capitalizeEachWord","changeCurrentUserPasswordApiAsync","userDetails","resetCurrentUserPasswordApiAsync","userEmail","updateCurrentUserApiAsync","token","put","then","data","catch","err","console","log","updateCurrentUserProfilePictureApiAsync","image","loginCurrentUserApiAsync","username","password","role","undefined","getToken","post","email","obj","access_token","afterUnSuccessful","getUser","_token","get","getUserAvatar","tt","_token2","responseType","responseEncoding","res","Buffer","from","finalize","Promise","all","userData","_userData$","_role","_loggedInUser$country","mx","userProfileImage","loggedInUser","firstNames","firstName","lastName","userRole","website","about","bio","country","city","github","socials","linkedin","instagram","twitter","flag","profilePic","userToken","countryFlagIcon","userImage","user","afterSuccessful","_err$response$data$me","message","response"],"sources":["/home/johnadeniran/Documents/Projects/Mentor-Management-System-Team-3/frontend/mms-Admin/src/services/axios/api-services/current-user.ts"],"sourcesContent":["import getCountryFlag from \"../../countries\";\nimport axiosWithBearer, { axiosWithoutBearer } from \"../axios-services\";\nimport {\n  ChangePasswordDetails,\n  LoggedInUser,\n  SystemUser,\n  UsernamePassword,\n} from \"../../redux/types/system-user\";\nimport avatar from '../../../assets/images/avatar.svg';\nimport { capitalizeEachWord } from \"../../generalFunctions\";\nexport const changeCurrentUserPasswordApiAsync = async (\n  userDetails: ChangePasswordDetails\n) => {\n  return userDetails;\n};\n\nexport const resetCurrentUserPasswordApiAsync = async (userEmail: string) => {\n  return userEmail;\n};\n\nexport const updateCurrentUserApiAsync = async (\n  userDetails: SystemUser,\n  token: string\n) => {\n  await axiosWithBearer(token ?? \"\")\n    .put(\"users/update\", userDetails)\n    .then((data) => {\n      return data;\n    })\n    .catch((err) => {\n      console.log(err);\n      throw err;\n    });\n  return userDetails;\n};\n\nexport const updateCurrentUserProfilePictureApiAsync = async (image: any) => {\n  return image;\n};\n\nexport const loginCurrentUserApiAsync = async (\n  userDetails: UsernamePassword\n) => {\n  const { username, password } = userDetails;\n  let role: string | undefined = undefined;\n  let token: string | undefined = undefined;\n\n  const getToken = axiosWithoutBearer\n    .post<{\n      data: { access_token: string; email: string; id: string; role: string };\n    }>(\"/auth/login\", {\n      email: `${username}`,\n      password: `${password}`,\n    })\n    .then((data) => {\n      const obj = data.data.data;\n      role = obj.role;\n      token = obj.access_token;\n      return obj;\n    })\n    .catch((err) => {\n      if (userDetails?.afterUnSuccessful) userDetails?.afterUnSuccessful(err);\n      throw err;\n    });\n\n  const getUser = getToken\n    .then(() =>\n      axiosWithBearer(token ?? \"\")\n        .get(\"/users/me\")\n        .then((data) => {\n          return data;\n        })\n        .catch((err) => {\n          if (userDetails?.afterUnSuccessful)\n            userDetails?.afterUnSuccessful(err);\n          throw err;\n        })\n    )\n    .catch((err) => {\n      if (userDetails?.afterUnSuccessful) userDetails?.afterUnSuccessful(err);\n      throw err;\n    });\n\n  const getUserAvatar = getToken\n    .then((tt) =>\n      axiosWithBearer(token ?? \"\").get(\"/auth/avatar\", {\n        responseType: 'arraybuffer',\n        responseEncoding: \"base64\"\n      })\n    )\n    .then((res) => {\n      return Buffer.from(res.data, \"base64\");\n    })\n    .catch((err) => {\n      // if (userDetails?.afterUnSuccessful)\n      //   userDetails?.afterUnSuccessful(err);\n    });\n\n  const finalize = Promise.all([getUser, getUserAvatar])\n    .then((userData) => {\n      const mx = userData[0].data.data;\n      const userProfileImage = userData[1] ?? avatar;\n\n      let loggedInUser: SystemUser = {\n        firstNames: capitalizeEachWord(mx.firstName),\n        lastName: capitalizeEachWord(mx.lastName),\n        userRole: role? capitalizeEachWord(role??\"\") : undefined,\n        website: mx.website,\n        about: mx.bio,\n        country: capitalizeEachWord(mx.country),\n        city: capitalizeEachWord(mx.city),\n        email: mx.email,\n        github: mx.socials.github,\n        linkedin: mx.socials.linkedin,\n        instagram: mx.socials.instagram,\n        twitter: mx.socials.twitter,\n      };\n\n      const flag = getCountryFlag(loggedInUser.country ?? \" \");\n      const profilePic = userProfileImage;\n      const userToken = token;\n\n      loggedInUser = {\n        ...loggedInUser,\n        countryFlagIcon: flag,\n        userImage: profilePic,\n      };\n      const user: LoggedInUser = {\n        user: loggedInUser,\n        userToken: userToken,\n      };\n      if (userDetails?.afterSuccessful) userDetails?.afterSuccessful();\n      return user;\n    })\n    .catch((err) => {\n      const message = err.response.data.message ?? err;\n      if (userDetails?.afterUnSuccessful)\n        userDetails?.afterUnSuccessful(message);\n      throw message;\n    });\n  return finalize;\n};\n\n// var options = {\n//   method: 'GET',\n//   url: 'https://api.pexels.com/v1/curated',\n//   params: {page: '2', per_page: '40'},\n//   headers: {Authorization: '_authkey_'}\n// };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}