{"ast":null,"code":"var _jsxFileName = \"/home/johnadeniran/Documents/Projects/Mentor-Management-System-Team-3/frontend/mms-Admin/src/components/ToggleSwitch'/ToggleSwitch.tsx\";\nimport React from 'react';\nimport './ToggleSwitch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleSwitch = props => {\n  const onChange = event => {\n    props.onChange && props.onChange(event.target.checked);\n  };\n  const labelId = `label-${props.id}`;\n  const descriptionId = `description-${props.id}`;\n  const labelBy = labelId + ' ' + descriptionId;\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: props.id,\n    className: \"switch\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: props.id,\n      type: \"checkbox\",\n      role: \"switch\",\n      \"data-on\": props['data-on'],\n      checked: props.isChecked,\n      \"data-off\": props['data-off'],\n      onChange: onChange,\n      \"aria-checked\": props.isChecked,\n      \"aria-labelledby\": labelBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"switch-labels\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: labelId,\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), props.description && /*#__PURE__*/_jsxDEV(\"p\", {\n        id: descriptionId,\n        children: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = ToggleSwitch;\nToggleSwitch.defaultProps = {\n  \"data-on\": 'ON',\n  \"data-off\": 'OFF'\n};\nexport default ToggleSwitch;\nvar _c;\n$RefreshReg$(_c, \"ToggleSwitch\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ToggleSwitch","props","onChange","event","target","checked","labelId","id","descriptionId","labelBy","htmlFor","className","children","type","role","isChecked","fileName","_jsxFileName","lineNumber","columnNumber","label","description","_c","defaultProps","$RefreshReg$"],"sources":["/home/johnadeniran/Documents/Projects/Mentor-Management-System-Team-3/frontend/mms-Admin/src/components/ToggleSwitch'/ToggleSwitch.tsx"],"sourcesContent":["import React from 'react';\n\nimport './ToggleSwitch.css';\n\ninterface SwitchProperties {\n    id: string;\n    label?: string;\n    onChange?: (isChecked: boolean) => void;     \n    \"data-on\"?: string;    \n    isChecked?: boolean;    \n    \"data-off\"?: string;    \n    description?: string;\n}\n\nconst ToggleSwitch: React.FC<SwitchProperties> = props => {\n    \n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        props.onChange && props.onChange(event.target.checked);\n    };\n\n    const labelId = `label-${props.id}`;\n    const descriptionId = `description-${props.id}`;\n\n    const labelBy = labelId + ' ' + descriptionId;\n    \n    return (\n        <label htmlFor={props.id} className=\"switch\">\n            <input\n                id={props.id}\n                type=\"checkbox\"\n                role=\"switch\"\n                data-on={props['data-on']}\n                checked={props.isChecked}\n                data-off={props['data-off']}\n                onChange={onChange}\n                aria-checked={props.isChecked}\n                aria-labelledby={labelBy}\n            />\n            <div className=\"switch-labels\">\n                <span id={labelId}>{props.label}</span>\n                {props.description &&\n                    <p id={descriptionId}>{props.description}</p>\n                }\n            </div>\n        </label>\n    );\n}\n\nToggleSwitch.defaultProps = {\n    \"data-on\": 'ON',\n    \"data-off\": 'OFF'\n}\n\nexport default ToggleSwitch;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY5B,MAAMC,YAAwC,GAAGC,KAAK,IAAI;EAEtD,MAAMC,QAAQ,GAAIC,KAA0C,IAAK;IAC7DF,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACC,KAAK,CAACC,MAAM,CAACC,OAAO,CAAC;EAC1D,CAAC;EAED,MAAMC,OAAO,GAAI,SAAQL,KAAK,CAACM,EAAG,EAAC;EACnC,MAAMC,aAAa,GAAI,eAAcP,KAAK,CAACM,EAAG,EAAC;EAE/C,MAAME,OAAO,GAAGH,OAAO,GAAG,GAAG,GAAGE,aAAa;EAE7C,oBACIT,OAAA;IAAOW,OAAO,EAAET,KAAK,CAACM,EAAG;IAACI,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACxCb,OAAA;MACIQ,EAAE,EAAEN,KAAK,CAACM,EAAG;MACbM,IAAI,EAAC,UAAU;MACfC,IAAI,EAAC,QAAQ;MACb,WAASb,KAAK,CAAC,SAAS,CAAE;MAC1BI,OAAO,EAAEJ,KAAK,CAACc,SAAU;MACzB,YAAUd,KAAK,CAAC,UAAU,CAAE;MAC5BC,QAAQ,EAAEA,QAAS;MACnB,gBAAcD,KAAK,CAACc,SAAU;MAC9B,mBAAiBN;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3B,eACFpB,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1Bb,OAAA;QAAMQ,EAAE,EAAED,OAAQ;QAAAM,QAAA,EAAEX,KAAK,CAACmB;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,EACtClB,KAAK,CAACoB,WAAW,iBACdtB,OAAA;QAAGQ,EAAE,EAAEC,aAAc;QAAAI,QAAA,EAAEX,KAAK,CAACoB;MAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAE/C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEhB,CAAC;AAAAG,EAAA,GAhCKtB,YAAwC;AAkC9CA,YAAY,CAACuB,YAAY,GAAG;EACxB,SAAS,EAAE,IAAI;EACf,UAAU,EAAE;AAChB,CAAC;AAED,eAAevB,YAAY;AAAC,IAAAsB,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}