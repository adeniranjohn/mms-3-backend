{"ast":null,"code":"import{combineReducers,configureStore}from\"@reduxjs/toolkit\";import{useDispatch,useSelector}from\"react-redux\";import{CurrentUserSlice}from\"./slices/current-user-slice\";import storage from'redux-persist/lib/storage';import{persistReducer,persistStore}from'redux-persist';import thunk from'redux-thunk';import{NotificationSlice}from\"./slices/notification-slice\";import{PrivacySlice}from\"./slices/privacy-slice\";var persistConfig={key:'root',storage:storage};var reducer=combineReducers({currentUser:CurrentUserSlice.reducer,privacy:PrivacySlice.reducer,notification:NotificationSlice.reducer});var persistedReducer=persistReducer(persistConfig,reducer);export var store=configureStore({reducer:persistedReducer,devTools:process.env.NODE_ENV!=='production',middleware:[thunk]});export var persistor=persistStore(store);//export const useAppDispatch: () => typeof store.dispatch = useDispatch;\nexport var useAppSelector=useSelector;export var useAppDispatch=function useAppDispatch(){return useDispatch();};//export const useAppSelector: TypedUseSelectorHook<AppState> = useSelector;","map":{"version":3,"names":["combineReducers","configureStore","useDispatch","useSelector","CurrentUserSlice","storage","persistReducer","persistStore","thunk","NotificationSlice","PrivacySlice","persistConfig","key","reducer","currentUser","privacy","notification","persistedReducer","store","devTools","process","env","NODE_ENV","middleware","persistor","useAppSelector","useAppDispatch"],"sources":["/home/johnadeniran/Documents/Projects/Mentor-Management-System-Team-3/frontend/mms-Admin/src/services/redux/Store.ts"],"sourcesContent":["import { AnyAction, combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { CurrentUserSlice } from \"./slices/current-user-slice\";\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport thunk, { ThunkDispatch } from 'redux-thunk';\nimport { NotificationSlice } from \"./slices/notification-slice\";\nimport { PrivacySlice } from \"./slices/privacy-slice\";\n\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}\n\n\nconst reducer = combineReducers(\n  {\n    currentUser: CurrentUserSlice.reducer,\n    privacy: PrivacySlice.reducer,\n    notification: NotificationSlice.reducer   \n  }\n)\n\ntype AppState = ReturnType<typeof reducer>;\ntype TypedDispatch<T> = ThunkDispatch<T, any, AnyAction>;\n\nconst persistedReducer = persistReducer(persistConfig, reducer)\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware: [thunk]\n})\nexport const persistor = persistStore(store)\n\nexport type RootState = ReturnType<typeof store.getState>;\n//export const useAppDispatch: () => typeof store.dispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\nexport const useAppDispatch = () => useDispatch<TypedDispatch<AppState>>();\n//export const useAppSelector: TypedUseSelectorHook<AppState> = useSelector;\n\n\n\n"],"mappings":"AAAA,OAAoBA,eAAe,CAAEC,cAAc,KAAQ,kBAAkB,CAC7E,OAA+BC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAC5E,OAASC,gBAAgB,KAAQ,6BAA6B,CAC9D,MAAO,CAAAC,OAAO,KAAM,2BAA2B,CAC/C,OAASC,cAAc,CAAEC,YAAY,KAAQ,eAAe,CAC5D,MAAO,CAAAC,KAAK,KAAyB,aAAa,CAClD,OAASC,iBAAiB,KAAQ,6BAA6B,CAC/D,OAASC,YAAY,KAAQ,wBAAwB,CAGrD,GAAM,CAAAC,aAAa,CAAG,CACpBC,GAAG,CAAE,MAAM,CACXP,OAAO,CAAPA,OACF,CAAC,CAGD,GAAM,CAAAQ,OAAO,CAAGb,eAAe,CAC7B,CACEc,WAAW,CAAEV,gBAAgB,CAACS,OAAO,CACrCE,OAAO,CAAEL,YAAY,CAACG,OAAO,CAC7BG,YAAY,CAAEP,iBAAiB,CAACI,OAClC,CAAC,CACF,CAKD,GAAM,CAAAI,gBAAgB,CAAGX,cAAc,CAACK,aAAa,CAAEE,OAAO,CAAC,CAE/D,MAAO,IAAM,CAAAK,KAAK,CAAGjB,cAAc,CAAC,CAClCY,OAAO,CAAEI,gBAAgB,CACzBE,QAAQ,CAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAC/CC,UAAU,CAAE,CAACf,KAAK,CACpB,CAAC,CAAC,CACF,MAAO,IAAM,CAAAgB,SAAS,CAAGjB,YAAY,CAACW,KAAK,CAAC,CAG5C;AACA,MAAO,IAAM,CAAAO,cAA+C,CAAGtB,WAAW,CAC1E,MAAO,IAAM,CAAAuB,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,QAAS,CAAAxB,WAAW,EAA2B,GAC1E"},"metadata":{},"sourceType":"module","externalDependencies":[]}